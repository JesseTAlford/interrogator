#!/bin/bash

# Exit on error
set -e

# Display Commands/dev-mode
# set -x

# Take host as an argument:
HOST=$1

#Get target and login information from environment.
# Idea for the future: consume stub directly?
USERNAME=$ADMIN_USERNAME
PASSWORD=$ADMIN_PASSWORD
API=$CF_API

# Set CF to use a seperate config file 
export CF_HOME=~/tmp/interroroute

# login with admin credentials
cf api $API
cf auth $USERNAME $PASSWORD

# create routes.json
##cf curl /v2/routes > ~/tmp/interroroute/routes.json

#stub of above for development tests:
touch ~/tmp/interroroute/routes.json
cp ~/workspace/interrogator/example-output/routes.json ~/tmp/interroroute/routes.json

# pull out an array of hosts with the given host name
jq '.resources | map(select(.entity.host == "nodeHost"))' ~/tmp/interroroute/routes.json > ~/tmp/interroroute/target-routes.json

# get a signle entity
jq '.[0].entity' ~/tmp/interroroute/target-routes.json > $CF_HOME/single-entity.json

# assign URLs for curling
URLAPPS=$(jq '.apps_url' ~/tmp/interroroute/single-entity.json)
URLSPACE=$(jq '.space_url' ~/tmp/interroroute/single-entity.json)
URLDOMAIN=$(jq '.domain_url' ~/tmp/interroroute/single-entity.json)

# get the things actual names, and the org
##APPS = $(cf curl $URLAPPS | jq '.')
##SPACE = $(cf curl $URLSPACE | jq '.')
##ORG = $(cf curl $URLSPACE | jq '.entity | .organization_url' | cf curl | jq '.entity | .name')
##DOMAIN = $(cf curl $URLDOMAIN | jq '.')

# stub of the above for development tests:
echo $URLAPPS
echo $URLSPACE
echo $URLDOMAIN

# logout the admin user
##cf logout